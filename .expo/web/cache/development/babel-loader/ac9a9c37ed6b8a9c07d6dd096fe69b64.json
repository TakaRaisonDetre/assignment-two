{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/taka_raison/Documents/react-native/rn-assignment/src/screens/UserListScreen.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  flex:1;\\n  background-color:#ebecf3;\\n  padding-top: 64px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { FirebaseContext, firebase } from \"../context/FirebaseContext\";\nimport { UserContext } from \"../context/UserContext\";\nimport { ListItem, Avatar } from 'react-native-elements';\nimport styled from 'styled-components';\n\nvar UserListScreen = function UserListScreen(props) {\n  var Firebase = useContext(FirebaseContext);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      candidates = _useState2[0],\n      setCandidates = _useState2[1];\n\n  useEffect(function () {\n    firebase.firestore().collection('registration').onSnapshot(function (querySnapShot) {\n      var candidates = [];\n      querySnapShot.docs.forEach(function (doc) {\n        var _doc$data = doc.data(),\n            fullName = _doc$data.fullName,\n            email = _doc$data.email,\n            age = _doc$data.age,\n            departmentId = _doc$data.departmentId,\n            gender = _doc$data.gender,\n            hireDate = _doc$data.hireDate,\n            isPermanent = _doc$data.isPermanent,\n            reason = _doc$data.reason;\n\n        candidates.push({\n          id: doc.id,\n          fullName: fullName,\n          email: email,\n          age: age,\n          departmentId: departmentId,\n          gender: gender,\n          hireDate: hireDate,\n          isPermanent: isPermanent,\n          reason: reason\n        });\n      });\n      setCandidates(candidates);\n    });\n  }, []);\n  return React.createElement(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }, React.createElement(ScrollView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, candidates.map(function (applicant) {\n    return React.createElement(ListItem, {\n      key: applicant.id,\n      bottomDivider: true,\n      onPress: function onPress() {\n        props.navigation.navigate('Detail', {\n          userId: applicant.id\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 22\n      }\n    }, React.createElement(ListItem.Chevron, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 26\n      }\n    }), React.createElement(ListItem.Content, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 26\n      }\n    }, React.createElement(ListItem.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 30\n      }\n    }, applicant.fullName), React.createElement(ListItem.Subtitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 30\n      }\n    }, applicant.email, \" | \", applicant.gender, \" | \", applicant.age)));\n  })));\n};\n\nexport default UserListScreen;\nvar Container = styled.View(_templateObject());","map":{"version":3,"sources":["/Users/taka_raison/Documents/react-native/rn-assignment/src/screens/UserListScreen.js"],"names":["React","useState","useEffect","useContext","FirebaseContext","firebase","UserContext","ListItem","Avatar","styled","UserListScreen","props","Firebase","candidates","setCandidates","firestore","collection","onSnapshot","querySnapShot","docs","forEach","doc","data","fullName","email","age","departmentId","gender","hireDate","isPermanent","reason","push","id","map","applicant","navigation","navigate","userId","Container","View"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from 'react'\nimport { View, Text, ScrollView } from 'react-native'\n\nimport {FirebaseContext, firebase} from '../context/FirebaseContext'\nimport {UserContext} from '../context/UserContext'\nimport { ListItem, Avatar } from 'react-native-elements'\nimport styled from 'styled-components'\n\n\nconst UserListScreen=(props)=> {\n    const Firebase = useContext(FirebaseContext)\n   const [candidates, setCandidates] = useState([])\n   \n   useEffect(()=>{\n      firebase.firestore().collection('registration').onSnapshot(querySnapShot=>{\n        const candidates =[]\n        querySnapShot.docs.forEach(doc=>{\n         const {fullName, email, age, departmentId, gender, hireDate, isPermanent, reason} = doc.data()\n         candidates.push({\n          id:doc.id, fullName, email, age, departmentId, gender, hireDate, isPermanent, reason\n         });\n        });\n        setCandidates(candidates)\n      }); \n   },[])\n\n\n    return (\n   <Container>\n        <ScrollView>\n            {\n                candidates.map(applicant=>{\n                    return(\n                   \n                     <ListItem key={applicant.id} bottomDivider onPress={()=>{\n                       props.navigation.navigate('Detail', {\n                           userId: applicant.id\n                       })\n                     }}>\n                         <ListItem.Chevron/>\n                         <ListItem.Content>\n                             <ListItem.Title>\n                                 {applicant.fullName}\n                             </ListItem.Title>\n                             <ListItem.Subtitle>\n                                 {applicant.email} | {applicant.gender} | {applicant.age}\n                             </ListItem.Subtitle>\n                         </ListItem.Content>\n                        </ListItem>\n                        \n                    )\n                })\n            }\n        </ScrollView>\n        </Container>\n    )\n}\nexport default UserListScreen\n\n\n\nconst Container = styled.View`\n  flex:1;\n  background-color:#ebecf3;\n  padding-top: 64px;\n`;"]},"metadata":{},"sourceType":"module"}